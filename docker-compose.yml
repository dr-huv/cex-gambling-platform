version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cex-postgres
    environment:
      POSTGRES_DB: cex_gambling
      POSTGRES_USER: cex_user
      POSTGRES_PASSWORD: cex_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cex-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cex-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cex-network

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: cex-mongodb
    environment:
      MONGO_INITDB_DATABASE: cex_gambling
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - cex-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cex-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://cex_user:cex_password@postgres:5432/cex_gambling
      REDIS_URL: redis://redis:6379
      MONGODB_URL: mongodb://mongodb:27017/cex_gambling
    ports:
      - "3001:3001"
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - cex-network

  # Order Matching Engine
  order-engine:
    build:
      context: ./order-engine
      dockerfile: Dockerfile
    container_name: cex-order-engine
    ports:
      - "9090:9090"
    environment:
      RUST_LOG: info
    networks:
      - cex-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cex-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - cex-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cex-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - cex-network

volumes:
  postgres_data:
  redis_data:
  mongodb_data:

networks:
  cex-network:
    driver: bridge
